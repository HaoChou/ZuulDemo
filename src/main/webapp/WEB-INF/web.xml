<web-app id="WebApp_ID" version="2.4"
	xmlns="http://java.sun.com/xml/ns/j2ee" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://java.sun.com/xml/ns/j2ee
	http://java.sun.com/xml/ns/j2ee/web-app_2_4.xsd">

	<display-name>Spring Web MVC Application</display-name>


	<!-- 字符集 过滤器  -->
	<filter>
		<filter-name>CharacterEncodingFilter</filter-name>
		<filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
		<init-param>
			<param-name>encoding</param-name>
			<param-value>UTF-8</param-value>
		</init-param>
		<init-param>
			<param-name>forceEncoding</param-name>
			<param-value>true</param-value>
		</init-param>
	</filter>
	<filter-mapping>
		<filter-name>CharacterEncodingFilter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>



	<servlet>
		<servlet-name>mvc-dispatcher</servlet-name>
		<servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
		<load-on-startup>1</load-on-startup>
	</servlet>

	<servlet-mapping>
		<servlet-name>mvc-dispatcher</servlet-name>
		<url-pattern>*.do</url-pattern>
	</servlet-mapping>

	<context-param>
		<param-name>contextConfigLocation</param-name>
		<param-value>/WEB-INF/mvc-dispatcher-servlet.xml</param-value>
	</context-param>

	<listener>
		<listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
	</listener>



    <!--ZuulServlet is a servlet that matches all requests. It performs the core Zuul Filter flow of executing pre, routing, and post Filters.

    每次请求从这里进入-->

	<servlet>
		<servlet-name>ZuulServlet</servlet-name>
		<servlet-class>com.netflix.zuul.http.ZuulServlet</servlet-class>
	</servlet>

	<servlet-mapping>
		<servlet-name>ZuulServlet</servlet-name>
		<url-pattern>/*</url-pattern>
	</servlet-mapping>


    <!--ContextLifecycleFilter is a servlet filter matching all requests. It cleans up the RequestContext after each request, ensuring isolation.
    确保隔离 每次请求都会清理RequestContext
    基于threadlocal 实现的 每次清除
    -->
	<filter>
		<filter-name>ContextLifecycleFilter</filter-name>
		<filter-class>com.netflix.zuul.context.ContextLifecycleFilter</filter-class>
	</filter>
	<filter-mapping>
		<filter-name>ContextLifecycleFilter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>

    <!--初始化作用的啊-->

    <listener>
        <listener-class>com.zhou.test.zuul.StartServer</listener-class>
    </listener>

	<welcome-file-list>
		<welcome-file>index.jsp</welcome-file>
	</welcome-file-list>
</web-app>